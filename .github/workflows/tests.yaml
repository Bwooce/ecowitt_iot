name: Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  schedule:
    - cron: "0 0 * * *"  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggers

env:
  DEFAULT_PYTHON: "3.11"
  PRE_COMMIT_HOME: ~/.cache/pre-commit

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "pip"
          cache-dependency-path: '**/requirements_test.txt'

      - name: Install requirements
        run: |
          pip install -r requirements_test.txt
          pip install pytest-cov

      - name: Run tests
        run: |
          pytest \
            -v \
            --cov=custom_components.ecowitt_iot \
            --cov-report=xml \
            tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  hacs:
    runs-on: ubuntu-latest
    name: HACS
    steps:
      - uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration

  hassfest:
    runs-on: ubuntu-latest
    name: Hassfest
    steps:
      - uses: actions/checkout@v4

      - name: Hassfest validation
        uses: home-assistant/actions/hassfest@master

  style:
    runs-on: ubuntu-latest
    name: Style
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "pip"
          cache-dependency-path: '**/requirements_test.txt'

      - name: Install requirements
        run: |
          pip install pre-commit
          pip install black flake8 pylint pylint-strict-informational

      - name: Cache pre-commit environments
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure
